/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category UpdateTokenFeeBasisPoints
 * @category generated
 */
export type UpdateTokenFeeBasisPointsInstructionArgs = {
  tokenFeeBasisPoints: beet.bignum
}
/**
 * @category Instructions
 * @category UpdateTokenFeeBasisPoints
 * @category generated
 */
export const updateTokenFeeBasisPointsStruct = new beet.BeetArgsStruct<
  UpdateTokenFeeBasisPointsInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['tokenFeeBasisPoints', beet.u64],
  ],
  'UpdateTokenFeeBasisPointsInstructionArgs'
)
/**
 * Accounts required by the _updateTokenFeeBasisPoints_ instruction
 *
 * @property [_writable_, **signer**] admin
 * @property [_writable_] config
 * @category Instructions
 * @category UpdateTokenFeeBasisPoints
 * @category generated
 */
export type UpdateTokenFeeBasisPointsInstructionAccounts = {
  admin: web3.PublicKey
  config: web3.PublicKey
}

export const updateTokenFeeBasisPointsInstructionDiscriminator = [
  242, 207, 78, 61, 81, 37, 216, 94,
]

/**
 * Creates a _UpdateTokenFeeBasisPoints_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category UpdateTokenFeeBasisPoints
 * @category generated
 */
export function createUpdateTokenFeeBasisPointsInstruction(
  accounts: UpdateTokenFeeBasisPointsInstructionAccounts,
  args: UpdateTokenFeeBasisPointsInstructionArgs,
  programId = new web3.PublicKey('5AAFQF16iab69Zy2m2u9bSNBQRGWaByA7ZXAxaXeTTN4')
) {
  const [data] = updateTokenFeeBasisPointsStruct.serialize({
    instructionDiscriminator: updateTokenFeeBasisPointsInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.admin,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: accounts.config,
      isWritable: true,
      isSigner: false,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
